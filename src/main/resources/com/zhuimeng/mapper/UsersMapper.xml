<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhuimeng.dao.UsersMapper" >
  <resultMap id="BaseResultMap" type="com.zhuimeng.pojo.Users" >
    <id column="UserId" property="userid" jdbcType="INTEGER" />
    <result column="UserName" property="username" jdbcType="VARCHAR" />
    <result column="PassWord" property="password" jdbcType="VARCHAR" />
    <result column="Status" property="status" jdbcType="SMALLINT" />
    <result column="CreateOn" property="createon" jdbcType="TIMESTAMP" />
    <result column="UpdateOn" property="updateon" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    UserId, UserName, PassWord, Status, CreateOn, UpdateOn
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zhuimeng.pojo.UsersExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from Users
    where UserId = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from Users
    where UserId = #{userid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zhuimeng.pojo.UsersExample" >
    delete from Users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zhuimeng.pojo.Users" >
    insert into Users (UserId, UserName, PassWord, 
      Status, CreateOn, UpdateOn
      )
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{status,jdbcType=SMALLINT}, #{createon,jdbcType=TIMESTAMP}, #{updateon,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zhuimeng.pojo.Users" >
    insert into Users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        UserId,
      </if>
      <if test="username != null" >
        UserName,
      </if>
      <if test="password != null" >
        PassWord,
      </if>
      <if test="status != null" >
        Status,
      </if>
      <if test="createon != null" >
        CreateOn,
      </if>
      <if test="updateon != null" >
        UpdateOn,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="createon != null" >
        #{createon,jdbcType=TIMESTAMP},
      </if>
      <if test="updateon != null" >
        #{updateon,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zhuimeng.pojo.UsersExample" resultType="java.lang.Integer" >
    select count(*) from Users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update Users
    <set >
      <if test="record.userid != null" >
        UserId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.username != null" >
        UserName = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        PassWord = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        Status = #{record.status,jdbcType=SMALLINT},
      </if>
      <if test="record.createon != null" >
        CreateOn = #{record.createon,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateon != null" >
        UpdateOn = #{record.updateon,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update Users
    set UserId = #{record.userid,jdbcType=INTEGER},
      UserName = #{record.username,jdbcType=VARCHAR},
      PassWord = #{record.password,jdbcType=VARCHAR},
      Status = #{record.status,jdbcType=SMALLINT},
      CreateOn = #{record.createon,jdbcType=TIMESTAMP},
      UpdateOn = #{record.updateon,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhuimeng.pojo.Users" >
    update Users
    <set >
      <if test="username != null" >
        UserName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        PassWord = #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        Status = #{status,jdbcType=SMALLINT},
      </if>
      <if test="createon != null" >
        CreateOn = #{createon,jdbcType=TIMESTAMP},
      </if>
      <if test="updateon != null" >
        UpdateOn = #{updateon,jdbcType=TIMESTAMP},
      </if>
    </set>
    where UserId = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhuimeng.pojo.Users" >
    update Users
    set UserName = #{username,jdbcType=VARCHAR},
      PassWord = #{password,jdbcType=VARCHAR},
      Status = #{status,jdbcType=SMALLINT},
      CreateOn = #{createon,jdbcType=TIMESTAMP},
      UpdateOn = #{updateon,jdbcType=TIMESTAMP}
    where UserId = #{userid,jdbcType=INTEGER}
  </update>
</mapper>